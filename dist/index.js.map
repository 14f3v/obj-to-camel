{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type { CamelCase } from \"./type\";\n\nexport default function ObjectConvertionKeysToCamelCase<T extends Record<string, any>>(obj: T): { [K in keyof T as CamelCase<K & string>]: T[K] } {\n    const camelObj: any = {};\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            const camelKey = key.toLowerCase().replace(/_([a-z])/g, (match, letter) => letter.toUpperCase());\n            camelObj[camelKey.charAt(0).toLowerCase() + camelKey.slice(1)] = obj[key];\n        }\n    }\n    return camelObj;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEe,SAAR,gCAAgF,KAA2D;AAC9I,QAAM,WAAgB,CAAC;AACvB,aAAW,OAAO,KAAK;AACnB,QAAI,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,GAAG;AAChD,YAAM,WAAW,IAAI,YAAY,EAAE,QAAQ,aAAa,CAAC,OAAO,WAAW,OAAO,YAAY,CAAC;AAC/F,eAAS,SAAS,OAAO,CAAC,EAAE,YAAY,IAAI,SAAS,MAAM,CAAC,CAAC,IAAI,IAAI,GAAG;AAAA,IAC5E;AAAA,EACJ;AACA,SAAO;AACX;","names":[]}